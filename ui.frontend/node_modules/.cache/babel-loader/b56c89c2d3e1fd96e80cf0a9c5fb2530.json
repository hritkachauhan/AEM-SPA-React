{"ast":null,"code":"var _jsxFileName = \"D:\\\\AEM project\\\\aem-spa.react\\\\ui.frontend\\\\src\\\\components\\\\RouteHelper\\\\RouteHelper.js\";\n/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n ~ Copyright 2020 Adobe Systems Incorporated\r\n ~\r\n ~ Licensed under the Apache License, Version 2.0 (the \"License\");\r\n ~ you may not use this file except in compliance with the License.\r\n ~ You may obtain a copy of the License at\r\n ~\r\n ~     http://www.apache.org/licenses/LICENSE-2.0\r\n ~\r\n ~ Unless required by applicable law or agreed to in writing, software\r\n ~ distributed under the License is distributed on an \"AS IS\" BASIS,\r\n ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n ~ See the License for the specific language governing permissions and\r\n ~ limitations under the License.\r\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\n/**\r\n * Helper that facilitate the use of the {@link Route} component\r\n */\n\n/**\r\n * Returns a composite component where a {@link Route} component wraps the provided component\r\n *\r\n * @param {React.Component} WrappedComponent    - React component to be wrapped\r\n * @param {string} [extension=html]             - extension used to identify a route amongst the tree of resource URLs\r\n * @returns {CompositeRoute}\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const withRoute = (WrappedComponent, extension) => {\n  return class CompositeRoute extends Component {\n    render() {\n      let routePath = this.props.cqPath;\n      if (!routePath) {\n        return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n          ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 16\n        }, this);\n      }\n      extension = extension || 'html';\n\n      // Context path + route path + extension\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: '(.*)' + routePath + '(.' + extension + ')?',\n        render: routeProps => {\n          return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n            ...this.props,\n            ...routeProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 20\n          }, this);\n        }\n      }, routePath, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n  };\n};","map":{"version":3,"names":["React","Component","Route","jsxDEV","_jsxDEV","withRoute","WrappedComponent","extension","CompositeRoute","render","routePath","props","cqPath","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","routeProps"],"sources":["D:/AEM project/aem-spa.react/ui.frontend/src/components/RouteHelper/RouteHelper.js"],"sourcesContent":["/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n ~ Copyright 2020 Adobe Systems Incorporated\r\n ~\r\n ~ Licensed under the Apache License, Version 2.0 (the \"License\");\r\n ~ you may not use this file except in compliance with the License.\r\n ~ You may obtain a copy of the License at\r\n ~\r\n ~     http://www.apache.org/licenses/LICENSE-2.0\r\n ~\r\n ~ Unless required by applicable law or agreed to in writing, software\r\n ~ distributed under the License is distributed on an \"AS IS\" BASIS,\r\n ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n ~ See the License for the specific language governing permissions and\r\n ~ limitations under the License.\r\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\n/**\r\n * Helper that facilitate the use of the {@link Route} component\r\n */\r\n\r\n/**\r\n * Returns a composite component where a {@link Route} component wraps the provided component\r\n *\r\n * @param {React.Component} WrappedComponent    - React component to be wrapped\r\n * @param {string} [extension=html]             - extension used to identify a route amongst the tree of resource URLs\r\n * @returns {CompositeRoute}\r\n */\r\nexport const withRoute = (WrappedComponent, extension) => {\r\n  return class CompositeRoute extends Component {\r\n    render() {\r\n      let routePath = this.props.cqPath;\r\n      if (!routePath) {\r\n        return <WrappedComponent {...this.props} />;\r\n      }\r\n\r\n      extension = extension || 'html';\r\n\r\n      // Context path + route path + extension\r\n      return (\r\n        <Route\r\n          key={routePath}\r\n          exact\r\n          path={'(.*)' + routePath + '(.' + extension + ')?'}\r\n          render={routeProps => {\r\n            return <WrappedComponent {...this.props} {...routeProps} />;\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n};\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,KAAK,QAAQ,kBAAkB;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,OAAO,MAAMC,SAAS,GAAGA,CAACC,gBAAgB,EAAEC,SAAS,KAAK;EACxD,OAAO,MAAMC,cAAc,SAASP,SAAS,CAAC;IAC5CQ,MAAMA,CAAA,EAAG;MACP,IAAIC,SAAS,GAAG,IAAI,CAACC,KAAK,CAACC,MAAM;MACjC,IAAI,CAACF,SAAS,EAAE;QACd,oBAAON,OAAA,CAACE,gBAAgB;UAAA,GAAK,IAAI,CAACK;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAC7C;MAEAT,SAAS,GAAGA,SAAS,IAAI,MAAM;;MAE/B;MACA,oBACEH,OAAA,CAACF,KAAK;QAEJe,KAAK;QACLC,IAAI,EAAE,MAAM,GAAGR,SAAS,GAAG,IAAI,GAAGH,SAAS,GAAG,IAAK;QACnDE,MAAM,EAAEU,UAAU,IAAI;UACpB,oBAAOf,OAAA,CAACE,gBAAgB;YAAA,GAAK,IAAI,CAACK,KAAK;YAAA,GAAMQ;UAAU;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAC7D;MAAE,GALGN,SAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMf,CAAC;IAEN;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}